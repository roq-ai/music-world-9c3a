generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model label {
  id          String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?    @db.VarChar(255)
  image       String?    @db.VarChar(255)
  name        String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  user_id     String     @db.Uuid
  tenant_id   String     @db.VarChar(255)
  user        user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_id")
  listener    listener[]
}

model listener {
  id                String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id           String?  @db.Uuid
  followed_label_id String?  @db.Uuid
  created_at        DateTime @default(now()) @db.Timestamp(6)
  updated_at        DateTime @default(now()) @db.Timestamp(6)
  label             label?   @relation(fields: [followed_label_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_followed_label_id")
  user              user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_id")
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  label       label[]
  listener    listener[]
}
